"""
Django settings for g3_dashboard project.
Generated by 'django-admin startproject' using Django 1.10.3.
For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import configparser


config = configparser.ConfigParser()
config.read('local_db_config.ini', encoding='utf-8')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-_^arft-d@_&w_er6m(a-%&c94++cewk=ro#^w&8f&j-a4-=qh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if DEBUG:
    config.read('server_db_config.ini', encoding='utf-8')

ALLOWED_HOSTS = ['52.79.170.101', '*']


# Application definition


INSTALLED_APPS = [
    'admin_view_permission',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'country_state',
    'content_uploader',
    'classes',
    'course_management',
    'logentry_admin',
    'task_management',
    # 'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'g3_dashboard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR+'/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ADMIN_VIEW_PERMISSION_MODELS = [
    # auth.User,
    'course_management.Course',
    'course_management.Subject',
    'course_management.Chapter',
    'course_management.Topic',
    'course_management.ModuleData',
]

WSGI_APPLICATION = 'g3_dashboard.wsgi.application'

# AUTH_USER_MODEL = 'classes.UserProfile'
# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config["DATABASE"]["ENGINE"],
        'NAME': config["DATABASE"]["NAME"],
        'USER': config["DATABASE"]["USER"],
        'PASSWORD': config["DATABASE"]["PASSWORD"],
        'HOST': config["DATABASE"]["HOST"],   # Or an IP Address that your DB is hosted on
        'PORT': config["DATABASE"]["PORT"],
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'content_uploader.MyUser'

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
# from admin_custom import MyUserCreationForm

MAIL_GUN_API_KEY = 'key-3d91be5330422b6a78f9e9d859010763'
MAIL_GUN_DNS = 'sandbox3c2172091a0d419e867ec7bf45185cdb.mailgun.org'

# if you know what you do:
#    > touch
# else:
#    > do't dare
import django
django.setup()

import settings_conf
